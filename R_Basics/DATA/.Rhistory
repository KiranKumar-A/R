A
A[2,3]
B <- matrix(my.data, 4, 5, byrow=T)
B
B[2,5]
r1 <- c("I", "am", "happy")
r2 <- c("What", "a", "day")
r3 <- c(1,2,3)
C <- rbind(r1, r2, r3)
C
D <- cbind(C1,C2)
C1 <- 1:5
C2 <- -1:-5
D <- cbind(C1,C2)
D
Charlie <- 1:5
Charlie
names(Charlie)
names(Charlie)<- c("a", "b","c", "d", "e")
names(Charlie)
Charlie
Charlie["d"]
names(Charlie) <- NULL
Charlie
names(Charlie) <- NULL
Charlie
names(Charlie) <- NULL
Charlie
temp.vec <- rep(c("a", "b", "zZ"),3)
c("a", "b", "zZ")
rep(c("a", "b", "zZ"),3)
rep(c("a", "b", "zZ"),times=3)
temp.vec <-
rep(c("a", "b", "zZ"),each=3)
rep(c("a", "b", "zZ"),each=3)
temp.vec
Bravo <- matrix(temp.vec, 3, 3)
Bravo
rownames(Bravo) <- c("How", "are", "you?")
Bravo
colnames(Bravo)  <- c("X", "Y", "Z")
Bravo
Bravo["are", "Y"]  <- 0
Bravo
rownames(Bravo)
rownames(Bravo)  <-  NULL
rownames(Bravo)
Games
rownames()
rownames(Games)
colnames(Games)
Games["LebronJmaes", "2012"]
Games["LeBronJmaes", "2012"]
Games["LeBronJames", "2012"]
FieldGoals
FieldGoals/Games
round(FieldGoals/Games,1)
round(MinutesPlayed/Games,2)
round(MinutesPlayed/Games)
MinutesPlayed
round(FieldGoalAttempts/Games)
round(FieldGoals/FieldGoalAttempts)
round(FieldGoalAttempts/FieldGoals)
round(FieldGoals/FieldGoalAttempts,2)
round(FieldGoalAttempts/FieldGoals,2)
matplot(FieldGoalAttempts,FieldGoals)
?matplot
FieldGoals
t(FieldGoals)
t(FieldGoals)
matplot(t(FieldGoals))
matplot(t(FieldGoals), type="b", pch=15:18, col=(1:4,6))
matplot(t(FieldGoals), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.01, legend=Players,col=c(1:4,6), pch=15:18, horiz = F)
legend("bottomleft", inset =0.0001, legend=Players,col=c(1:4,6), pch=15:18, horiz = F)
matplot(t(FieldGoals), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.0001, legend=Players,col=c(1:4,6), pch=15:18, horiz = F)
matplot(t(FieldGoals/FieldGoalAttempts), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.0001, legend=Players,col=c(1:4,6), pch=15:18, horiz = F)
round(Salary/Points,2)
x <- c("a", "b", "c", "d", "e")
x
x[c(1,5)]
x[1]
Games
Games[1:3,6:10]
Games[C(1,10),]
Games[c(1,10),]
Games[,c(3:4)]
Games[1,]
Games[1,5]
Games[1,,drop]
Games[1,,drop=F]
Games[1,5,drop=F]
matplot(t(MinutesPlayed), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.0001, legend=Players,col=c(1:4,6), pch=15:18, horiz = F)
Data <- MinutesPlayed[1:3]
Data
t(Data)
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
Data <- MinutesPlayed[1:3,]
Data
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.0001, legend=Players[1:3],col=c(1:4,6), pch=15:18, horiz = F)
legend("bottomleft", inset =0.0001, legend=Players[1],col=c(1:4,6), pch=15:18, horiz = F)
Data <- MinutesPlayed[1,]
Data
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.0001, legend=Players[1],col=c(1:4,6), pch=15:18, horiz = F)
Data <- MinutesPlayed[1,drop=F]
Data
Data <- MinutesPlayed[1,drop=F]
Data
Data <- MinutesPlayed[1,,drop=F]
Data
legend("bottomleft", inset =0.0001, legend=Players[1],col=c(1:4,6), pch=15:18, horiz = F)
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
myplot <- function(){
Data <- MinutesPlayed[1,,drop=F]
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.0001, legend=Players[1],col=c(1:4,6), pch=15:18, horiz = F)
}
myplot <- function(){
Data <- MinutesPlayed[2,,drop=F]
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.0001, legend=Players[2],col=c(1:4,6), pch=15:18, horiz = F)
}
myplot <- function(){
Data <- MinutesPlayed[2:3,,drop=F]
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.0001, legend=Players[2:3],col=c(1:4,6), pch=15:18, horiz = F)
}
myplot <- function(){
Data <- MinutesPlayed[2:3,,drop=F]
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.0001, legend=Players[2:3],col=c(1:4,6), pch=15:18, horiz = F)
}
Data <- MinutesPlayed[2:3,,drop=F]
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.0001, legend=Players[2:3],col=c(1:4,6), pch=15:18, horiz = F)
myplot <- function(){
Data <- MinutesPlayed[2:3,,drop=F]
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.0001, legend=Players[2:3],col=c(1:4,6), pch=15:18, horiz = F)
}
myplot <- function(){
Data <- MinutesPlayed[2:5,,drop=F]
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.0001, legend=Players[2:5],col=c(1:4,6), pch=15:18, horiz = F)
}
myplot()
myplot()
myplot <- function(){
Data <- MinutesPlayed[2:3,,drop=F]
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.0001, legend=Players[2:3],col=c(1:4,6), pch=15:18, horiz = F)
}
Data <- MinutesPlayed[2:3,,drop=F]
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
myplot()
myplot <- function(rows){
Data <- MinutesPlayed[2:3,,drop=F]
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.0001, legend=Players[rows],col=c(1:4,6), pch=15:18, horiz = F)
}
myplot(1:5)
myplot(1:5)
myplot <- function(rows){
Data <- MinutesPlayed[rows,,drop=F]
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.0001, legend=Players[rows],col=c(1:4,6), pch=15:18, horiz = F)
}
Data <- MinutesPlayed[rows,,drop=F]
myplot <- function(rows){
Data <- MinutesPlayed[rows,,drop=F]
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.0001, legend=Players[rows],col=c(1:4,6), pch=15:18, horiz = F)
}
myplot(1:5)
myplot(1:10)
myplot(1:5)
myplot <- function(rows){
Data <- Games[rows,,drop=F]
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.0001, legend=Players[rows],col=c(1:4,6), pch=15:18, horiz = F)
}
myplot(1:5)
myplot <- function(data,rows){
Data <- data[rows,,drop=F]
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.0001, legend=Players[rows],col=c(1:4,6), pch=15:18, horiz = F)
}
myplot(Salary,1:5)
myplot(Salary,1:2)
myplot <- function(data,rows=1:10){
Data <- data[rows,,drop=F]
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.0001, legend=Players[rows],col=c(1:4,6), pch=15:18, horiz = F)
}
myplot(Salary,1:2)
myplot(Salary)
myplot(Salary, 1:3)
myplot(MinutesPlayed/Games, 1:3)
myplot(MinutesPlayed/Games, 3)
myplot(Games)
myplot <- function(data,rows=1:10){
Data <- data[rows,,drop=F]
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset =0.01, legend=Players[rows],col=c(1:4,6), pch=15:18, horiz = F)
}
myplot(Games)
myplot(Salary)
myplot(Salary/Games)
myplot(Salary/FieldGoals)
myplot(MinutesPlayed)
myplot(Points)
myplot(FieldGoals/Games)
myplot(FieldGoals/FieldGoalAttempts)
myplot(FieldGoalAttempts/Games)
myplot(Points/Games)
myplot(MinutesPlayed/Games)
myplot(Games)
myplot(FieldGoals/MinutesPlayed)
myplot(Points/FieldGoals)
Freethrows <- rbind(KobeBryant_FT, JoeJohnson_FT, LeBronJames_FT, CarmeloAnthony_FT, DwightHoward_FT, ChrisBosh_FT, ChrisPaul_FT, KevinDurant_FT, DerrickRose_FT, DwayneWade_FT)
rm(KobeBryant_FT, JoeJohnson_FT, LeBronJames_FT, CarmeloAnthony_FT, DwightHoward_FT, ChrisBosh_FT, ChrisPaul_FT, KevinDurant_FT, DerrickRose_FT, DwayneWade_FT)
colnames(Freethrows) <- Seasons
rownames(Freethrows) <- Players
Freethrows <- cbind(KobeBryant_FT, JoeJohnson_FT, LeBronJames_FT, CarmeloAnthony_FT, DwightHoward_FT, ChrisBosh_FT, ChrisPaul_FT, KevinDurant_FT, DerrickRose_FT, DwayneWade_FT)
rm(KobeBryant_FT, JoeJohnson_FT, LeBronJames_FT, CarmeloAnthony_FT, DwightHoward_FT, ChrisBosh_FT, ChrisPaul_FT, KevinDurant_FT, DerrickRose_FT, DwayneWade_FT)
colnames(Freethrows) <- Seasons
rownames(Freethrows) <- Players
FT <- cbind(KobeBryant_FT, JoeJohnson_FT, LeBronJames_FT, CarmeloAnthony_FT, DwightHoward_FT, ChrisBosh_FT, ChrisPaul_FT, KevinDurant_FT, DerrickRose_FT, DwayneWade_FT)
rm(KobeBryant_FT, JoeJohnson_FT, LeBronJames_FT, CarmeloAnthony_FT, DwightHoward_FT, ChrisBosh_FT, ChrisPaul_FT, KevinDurant_FT, DerrickRose_FT, DwayneWade_FT)
colnames(FT) <- Seasons
rownames(FT) <- Players
#Dear Student,
#
#Welcome to the dataset for the homework exercise.
#
#Instructions for this dataset:
# You have only been supplied vectors. You will need
# to create the matrices yourself.
# Matrices:
# - FreeThrows
# - FreeThrowAttempts
#
#Sincerely,
#Kirill Eremenko
#www.superdatascience.com
#Copyright: These datasets were prepared using publicly available data.
#           However, theses scripts are subject to Copyright Laws.
#           If you wish to use these R scripts outside of the R Programming Course
#           by Kirill Eremenko, you may do so by referencing www.superdatascience.com in your work.
#Comments:
#Seasons are labeled based on the first year in the season
#E.g. the 2012-2013 season is preseneted as simply 2012
#Notes and Corrections to the data:
#Kevin Durant: 2006 - College Data Used
#Kevin Durant: 2005 - Proxied With 2006 Data
#Derrick Rose: 2012 - Did Not Play
#Derrick Rose: 2007 - College Data Used
#Derrick Rose: 2006 - Proxied With 2007 Data
#Derrick Rose: 2005 - Proxied With 2007 Data
#Seasons
Seasons <- c("2005","2006","2007","2008","2009","2010","2011","2012","2013","2014")
#Players
Players <- c("KobeBryant","JoeJohnson","LeBronJames","CarmeloAnthony","DwightHoward","ChrisBosh","ChrisPaul","KevinDurant","DerrickRose","DwayneWade")
#Free Throws
KobeBryant_FT <- c(696,667,623,483,439,483,381,525,18,196)
JoeJohnson_FT <- c(261,235,316,299,220,195,158,132,159,141)
LeBronJames_FT <- c(601,489,549,594,593,503,387,403,439,375)
CarmeloAnthony_FT <- c(573,459,464,371,508,507,295,425,459,189)
DwightHoward_FT <- c(356,390,529,504,483,546,281,355,349,143)
ChrisBosh_FT <- c(474,463,472,504,470,384,229,241,223,179)
ChrisPaul_FT <- c(394,292,332,455,161,337,260,286,295,289)
KevinDurant_FT <- c(209,209,391,452,756,594,431,679,703,146)
DerrickRose_FT <- c(146,146,146,197,259,476,194,0,27,152)
DwayneWade_FT <- c(629,432,354,590,534,494,235,308,189,284)
#Matrix
#
#Matrix
FT <- cbind(KobeBryant_FT, JoeJohnson_FT, LeBronJames_FT, CarmeloAnthony_FT, DwightHoward_FT, ChrisBosh_FT, ChrisPaul_FT, KevinDurant_FT, DerrickRose_FT, DwayneWade_FT)
rm(KobeBryant_FT, JoeJohnson_FT, LeBronJames_FT, CarmeloAnthony_FT, DwightHoward_FT, ChrisBosh_FT, ChrisPaul_FT, KevinDurant_FT, DerrickRose_FT, DwayneWade_FT)
colnames(FT) <- Seasons
rownames(FT) <- Players
#
#Free Throw Attempts
KobeBryant_FTA <- c(819,768,742,564,541,583,451,626,21,241)
JoeJohnson_FTA <- c(330,314,379,362,269,243,186,161,195,176)
LeBronJames_FTA <- c(814,701,771,762,773,663,502,535,585,528)
CarmeloAnthony_FTA <- c(709,568,590,468,612,605,367,512,541,237)
DwightHoward_FTA <- c(598,666,897,849,816,916,572,721,638,271)
ChrisBosh_FTA <- c(581,590,559,617,590,471,279,302,272,232)
ChrisPaul_FTA <- c(465,357,390,524,190,384,302,323,345,321)
KevinDurant_FTA <- c(256,256,448,524,840,675,501,750,805,171)
DerrickRose_FTA <- c(205,205,205,250,338,555,239,0,32,187)
DwayneWade_FTA <- c(803,535,467,771,702,652,297,425,258,370)
#Matrix
#
FTA <- rbind(KobeBryant_FTA, JoeJohnson_FTA, LeBronJames_FTA, CarmeloAnthony_FTA, DwightHoward_FTA, ChrisBosh_FTA, ChrisPaul_FTA, KevinDurant_FTA, DerrickRose_FTA, DwayneWade_FTA)
rm(KobeBryant_FTA, JoeJohnson_FTA, LeBronJames_FTA, CarmeloAnthony_FTA, DwightHoward_FTA, ChrisBosh_FTA, ChrisPaul_FTA, KevinDurant_FTA, DerrickRose_FTA, DwayneWade_FTA)
colnames(FTA) <- Seasons
rownames(FTA) <- Players
#
myplot(FT)
myplot(FTA)
myplot(Points-FT/FieldGoals)
t + geom_histogram(binwidth = 10,
aes(x=CriticRating),
fill ="white",colour="Blue")
t + geom_histogram(binwidth = 10,
aes(x=CriticRating),
fill ="white",colour="Blue")
movies <- read.csv("Movie-Ratings.csv")
setwd("G://UDEMY//R//DATA")
movies <- read.csv("Movie-Ratings.csv")
t <- ggplot(data=movies)
library(ggplot2)
t <- ggplot(data=movies)
t + geom_histogram(binwidth = 10,
aes(x=AudienceRating),
fill ="white",colour="Blue")
colnames(movies) <- c("Film", "Genre", "CriticRating", "AudienceRating", "BudgetMillions", "Year")
ggplot(data = movies, aes(x=CriticRating, y=AudienceRating,
colour=Genre, size=BudgetMillions)) +
geom_point()
q  <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
colour=Genre,size=BudgetMillions))
q + geom_point()
q + geom_point(aes(size=CriticRating))
q + geom_point(aes(colour=BudgetMillions))
q+geom_point()
t <- ggplot(data = movies, aes(x=AudienceRating))
t + geom_histogram(binwidth = 10, fill="white", colour="Blue")
t <- ggplot(data=movies)
t + geom_histogram(binwidth = 10,
aes(x=AudienceRating),
fill ="white",colour="Blue")
t + geom_histogram(binwidth = 10,
aes(x=CriticRating),
fill ="white",colour="Blue")
t <- ggplot()
?geom_smooth
u <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
colour=Genre))
u + geom_point() + geom_smooth()
u + geom_point() + geom_smooth(fill = NA)
u <- ggplot(data=movies, aes(x=Genre, y=AudienceRating,
colour=Genre))
u + geom_boxplot()
u + geom_boxplot(size=1.2)
u + geom_boxplot(size=1.2) + geom_point()
u + geom_boxplot(size=1.2) + geom_jitter()
u + geom_jitter() + geom_boxplot(size=1.2, alpha(0.1))
u + geom_jitter() + geom_boxplot(size=1.2)
u + geom_jitter() + geom_boxplot(size=1.2, alpha=0.5)
v <- ggplot(data = movies, aes(x=BudgetMillions))
v + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black")
v + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black") +
facet_grid(Genre~.)
v + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black") +
facet_grid(Genre~., scales = "free")
w <- ggplot(data = movies, aes(x=CriticRating, y = AudienceRating,
colour = Genre))
w + geom_point(size=3)
w + geom_point(size=3)+
facet_grid(Genre~.)
w + geom_point(size=3) +
facet_grid(.~Year)
w + geom_point(size=3)+
facet_grid(Genre~Year)
w + geom_point(size=3)+
geom_smooth() +
facet_grid(Genre~Year)
w + geom_point(aes(size=BudgetMillions))+
geom_smooth() +
facet_grid(Genre~Year)
w + geom_point(size=3)+
geom_smooth() +
facet_grid(Genre~Year)
w + geom_point(aes(size=BudgetMillions))+
geom_smooth() +
facet_grid(Genre~Year)
m <- ggplot(data = movies, aes(x=CriticRating, y=AudienceRating,
size=BudgetMillions,
colour=Genre))
m + geom_point()
m + geom_point() +
xlim(50,100)
m + geom_point() +
xlim(50,100) +
ylim(50,100)
n <- ggplot(data=movies, aes(x=BudgetMillions))
n + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black") +
ylim(0,50)
n + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black")
n + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black") +
ylim(0,50)
n + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black") +
coord_cartesian(ylim = c(0,50))
n + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black") +
coord_cartesian(ylim = c(0,150))
n + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black")
n + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black") +
coord_cartesian(ylim = c(0,50))
w + geom_point(aes(size=BudgetMillions))+
geom_smooth() +
facet_grid(Genre~Year)
w + geom_point(aes(size=BudgetMillions))+
geom_smooth() +
facet_grid(Genre~Year) +
coord_cartesian(ylim = c(0,100))
o  <- ggplot(data = movies, aes(x=BudgetMillions))
o + geom_histogram(binwidth = 10, aes(fill = Genre), colour="Black")
h <- o + geom_histogram(binwidth = 10, aes(fill = Genre), colour="Black")
h
h + xlab("Money Axis")
h + xlab("Money Axis") + ylab("Number of movies")
h +
xlab("Money Axis") +
ylab("Number of movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size = 30),
axis.title.y = element_text(colour="Red", size=30))
h +
xlab("Money Axis") +
ylab("Number of movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size = 30),
axis.title.y = element_text(colour="Red", size=30),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20))
h +
xlab("Money Axis") +
ylab("Number of movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size = 30),
axis.title.y = element_text(colour="Red", size=30),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10))
?theme
h +
xlab("Money Axis") +
ylab("Number of movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size = 30),
axis.title.y = element_text(colour="Red", size=30),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.title = element_text(size = 30),
legend.title = element_text(size = 20))
h +
xlab("Money Axis") +
ylab("Number of movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size = 30),
axis.title.y = element_text(colour="Red", size=30),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20))
h +
xlab("Money Axis") +
ylab("Number of movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size = 30),
axis.title.y = element_text(colour="Red", size=30),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1))
h +
xlab("Money Axis") +
ylab("Number of movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size = 30),
axis.title.y = element_text(colour="Red", size=30),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1))
h +
xlab("Money Axis") +
ylab("Number of movies") +
ggtitle("Movie Budget Distribution")+
theme(axis.title.x = element_text(colour="DarkGreen", size = 30),
axis.title.y = element_text(colour="Red", size=30),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(colour="DarkBlue",
size=40, family = "Courier" ))
?family
?fontfamily
??fontfamily
?font_family
h +
xlab("Money Axis") +
ylab("Number of movies") +
ggtitle("Movie Budget Distribution")+
theme(axis.title.x = element_text(colour="DarkGreen", size = 30),
axis.title.y = element_text(colour="Red", size=30),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(colour="DarkBlue",
size=40, family = "Arial" ))
rnorm(1)
rnorm(1)
